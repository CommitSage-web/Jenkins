pipeline {
    agent any

    stages {        
        stage('Build') {
            steps {
                echo "Building PR: ${env.CHANGE_ID} by ${env.CHANGE_AUTHOR}"
                // your build logic
            }
        }
        stage('Test') {
            steps {
                echo "Running tests for PR: ${env.CHANGE_ID}"
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying application...'
            }
        }

        stage('Deploy to Staging') {
            steps {
                // Example shell commands
                sh 'scp build.zip user@staging-server:/var/www/app'
                sh 'ssh user@staging-server "cd /var/www/app && unzip -o build.zip && restart-service.sh"'
            }
        }

        stage('Deploy to Production') {
            when {
                branch 'main' // or use input to approve
            }
            steps {
                input message: "Deploy to production?"
                sh 'scp build.zip user@production-server:/var/www/app'
                sh 'ssh user@production-server "cd /var/www/app && unzip -o build.zip && restart-service.sh"'
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
            mail to: '2024tm93199@wilp.bits-pilani.ac.in',
                 subject: '✅ Jenkins Build Success',
                 body: 'Good job! The Jenkins pipeline completed successfully.'
        }

        failure {
            echo '❌ Pipeline failed!'
            mail to: '2024tm93199@wilp.bits-pilani.ac.in',
                 subject: '❌ Jenkins Build Failed',
                 body: 'Please check Jenkins logs for more information.'
        }
    }
}